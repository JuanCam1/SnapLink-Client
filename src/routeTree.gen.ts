/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HomeProfileImport } from './routes/home/profile'
import { Route as HomeListLinkImport } from './routes/home/list-link'
import { Route as HomeDashboardImport } from './routes/home/dashboard'
import { Route as HomeCreateLinkImport } from './routes/home/create-link'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeProfileRoute = HomeProfileImport.update({
  id: '/home/profile',
  path: '/home/profile',
  getParentRoute: () => rootRoute,
} as any)

const HomeListLinkRoute = HomeListLinkImport.update({
  id: '/home/list-link',
  path: '/home/list-link',
  getParentRoute: () => rootRoute,
} as any)

const HomeDashboardRoute = HomeDashboardImport.update({
  id: '/home/dashboard',
  path: '/home/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const HomeCreateLinkRoute = HomeCreateLinkImport.update({
  id: '/home/create-link',
  path: '/home/create-link',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/home/create-link': {
      id: '/home/create-link'
      path: '/home/create-link'
      fullPath: '/home/create-link'
      preLoaderRoute: typeof HomeCreateLinkImport
      parentRoute: typeof rootRoute
    }
    '/home/dashboard': {
      id: '/home/dashboard'
      path: '/home/dashboard'
      fullPath: '/home/dashboard'
      preLoaderRoute: typeof HomeDashboardImport
      parentRoute: typeof rootRoute
    }
    '/home/list-link': {
      id: '/home/list-link'
      path: '/home/list-link'
      fullPath: '/home/list-link'
      preLoaderRoute: typeof HomeListLinkImport
      parentRoute: typeof rootRoute
    }
    '/home/profile': {
      id: '/home/profile'
      path: '/home/profile'
      fullPath: '/home/profile'
      preLoaderRoute: typeof HomeProfileImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/home/create-link': typeof HomeCreateLinkRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/list-link': typeof HomeListLinkRoute
  '/home/profile': typeof HomeProfileRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/home/create-link': typeof HomeCreateLinkRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/list-link': typeof HomeListLinkRoute
  '/home/profile': typeof HomeProfileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/home/create-link': typeof HomeCreateLinkRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/list-link': typeof HomeListLinkRoute
  '/home/profile': typeof HomeProfileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/home/create-link'
    | '/home/dashboard'
    | '/home/list-link'
    | '/home/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/home/create-link'
    | '/home/dashboard'
    | '/home/list-link'
    | '/home/profile'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/home/create-link'
    | '/home/dashboard'
    | '/home/list-link'
    | '/home/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  HomeCreateLinkRoute: typeof HomeCreateLinkRoute
  HomeDashboardRoute: typeof HomeDashboardRoute
  HomeListLinkRoute: typeof HomeListLinkRoute
  HomeProfileRoute: typeof HomeProfileRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  HomeCreateLinkRoute: HomeCreateLinkRoute,
  HomeDashboardRoute: HomeDashboardRoute,
  HomeListLinkRoute: HomeListLinkRoute,
  HomeProfileRoute: HomeProfileRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/register",
        "/home/create-link",
        "/home/dashboard",
        "/home/list-link",
        "/home/profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/home/create-link": {
      "filePath": "home/create-link.tsx"
    },
    "/home/dashboard": {
      "filePath": "home/dashboard.tsx"
    },
    "/home/list-link": {
      "filePath": "home/list-link.tsx"
    },
    "/home/profile": {
      "filePath": "home/profile.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
